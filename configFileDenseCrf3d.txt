#-------------------- INPUT PARAMETERS --------------------

# numberOfModalitiesAndFiles: (int) number of modalities to use, followed by the full paths-filenames of the corresponding Nifti (or nii.gz) files.
-numberOfModalitiesAndFiles
1
/scratch/schen/post_processing_CRF/applicationAndExamples/example/NIFTY/OriginalImages.nii

# numberOfForegroundClassesAndProbMapFiles: (int) number of FOREGROUND classes, followed by full paths-filenames to the corresponding probability maps.
# The prob-maps will be used for unary potentials!
-numberOfForegroundClassesAndProbMapFiles
2
/scratch/schen/post_processing_CRF/applicationAndExamples/example/NIFTY/masksAortaPredicted.nii
/scratch/schen/post_processing_CRF/applicationAndExamples/example/NIFTY/masksPulPredicted.nii

# imageDimensions: (int) the dimensions of the image (2 for 2D, 3 for 3D)
# (TODO: This version should work for 2D too. But there is a bug in my config-parser that will not allow it >.< Will fix soon! So keep first value == 3 for 3D now!)
# This should be followed by the dimension of the image in the corresponding R-C-Z axes (everything in separate lines, my config-file-parser is bad!)
-imageDimensions
3
512
512
318

# minMaxIntensities: (float) min intensity, and followed by max intensity (in separate lines).
# All the channels (modalities) should have already been normalised to the same intensity range. The min and max values to use should be given here.
# Every value below or above these boundaries will be set the to min/max respectively.
-minMaxIntensities
+1963
+5996

#-------------------- OUTPUT PARAMETERS --------------------

# outputFolder: output folder, where the results should be saved (segmentation maps and probability maps generated by the CRF). NOTE: Folder should have been created beforehand!
-outputFolder
/scratch/schen/post_processing_CRF/applicationAndExamples/example/results

# prefixForOutputSegmentationMap: Essentially the filename for the resulting segmentation map (default is denseCrf3dOutputSegm). Will be saved as a .nii.gz automatically.
-prefixForOutputSegmentationMap
11_multi_class8pW

# prefixForOutputProbabilityMaps: Prefix of the filenames with which to save the resulting probability maps (default is denseCrf3dProbMapClass).
# Each probability map will be saved as "prefix" + numberOfClass + ".nii.gz" automatically.
-prefixForOutputProbabilityMaps
11_multi_class8pW

#------------------- HERE ARE THE CRF PARAMETERS----------------------

# pRCZandW: please provide 4 sequential floats (separate lines) for pR, pC, pZ, pW.
# positional-std parameters and the corresponding weight. The higher the stds, the larger the neighbourhood that the pixel is influenced by the nearby pixel-labels.
# Similary, higher positional-W means the energy function will require nearby voxels to have consistent labels.
-pRCZandW
3.0
3.0
3.0
8.0

# bRCZandW: please provide 4 floats (separate lines) for bR, bC, bZ, bW.
# bilateral-std parameters (bRCZ) and the corresponding weight (bW). bilateral RCZ are similar to the positional RCZ parameters. 
# But these contribute to the hybrid kernel, that is also influenced by the intensities in the images (-bMods section below). See original paper for more details.
# bW the bilateral weight that defines the influence of the hybrid kernel (distance of pixel + intensity difference).
# (Note: Imagine this as defining how far away from a pixel we require the intensities in the values to be rather homogeneous. bW values used were between 3-30, depends on number of modalities used too.)
-bRCZandW
17.0
12.0
10.0
5.0

# bMods: as many floats as the channels (modalities) used (in separate sequential lines). 
# These bilateral stds define how much intensity-homogeneity is required within a region.
# Higher values allow greater variations in the corresponding channel under the same label.
-bMods
3.5

# numberOfIterations: How many times the CRF regularisation will be iteratively performed. Common choices are 5-10. But it is worth some experimentation for faster inference. 
-numberOfIterations
2

